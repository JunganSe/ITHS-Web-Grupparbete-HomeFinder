@model HomeFinder.ViewModels.PropertyViewModel
@inject SignInManager<ApplicationUser> signInManager

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>


<h4>Property</h4>


@if (signInManager.IsSignedIn(User))
{
    if (User.IsInRole("User"))
    {

        if (Model.IsInterested == false)
        {
            <a asp-controller="ExpressionOfInterest" asp-action="Add" asp-route-id="@Model.Property.Id">Express interest</a>
        }
        else
        {
            <a asp-controller="ExpressionOfInterest" asp-action="Delete" asp-route-id="@Model.Property.Id" class="text-danger">Withdraw interest</a>
        }
    }
    else if ((User.IsInRole("EstateAgent")) || (User.IsInRole("Admin")))
    {
        <a asp-action="Edit" asp-route-id="@Model.Property.Id">Edit</a>
        <a asp-action="Delete" asp-route-id="@Model.Property.Id">Delete</a>
    }
}
else
{
    <a asp-controller="ExpressionOfInterest" asp-action="Add" asp-route-id="@Model.Property.Id">Express interest</a>
}

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Property.Price)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Property.Price)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Property.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Property.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Property.Summary)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Property.Summary)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Property.NumberOfRooms)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Property.NumberOfRooms)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Property.BuildingArea)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Property.BuildingArea)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Property.PlotArea)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Property.PlotArea)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Property.ConstructionYear)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Property.ConstructionYear)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Property.NumberOfViews)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Property.NumberOfViews)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Property.MapUrl)
        </dt>
        <dd class="col-sm-10">

            <iframe src="@Model.Property.MapUrl" width="400" height="300" style="border:0;" allowfullscreen="" loading="lazy"></iframe>

        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Property.PublishingDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Property.PublishingDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Property.ViewingDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Property.ViewingDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Adress)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Adress.City)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Property.PropertyType)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Property.PropertyType.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Property.Tenure)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Property.Tenure.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Property.SaleStatus)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Property.SaleStatus.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Property.EstateAgent)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model=> model.Property.EstateAgent.FirstName) @Html.DisplayFor(model=>model.Property.EstateAgent.LastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Property.ExpressionOfInterests)
        </dt>
        <dd class="col-sm-10">
            @if (Model.ExpressionsOfInterest.Count != 0)
            {
                <ul>
                    @foreach (var e in Model.ExpressionsOfInterest.Where(e => e.PropertyId == Model.Property.Id))
                    {
                        <li>
                            <p>
                                @Model.Users.FirstOrDefault(u=>u.Id == e.ApplicationUserId).FirstName
                                @Model.Users.FirstOrDefault(u=>u.Id == e.ApplicationUserId).LastName
                            </p>
                        </li>
                    }
                </ul>
            }


        </dd>
    </dl>
</div>
<div>

    <a asp-action="Index">Back to List</a>
</div>
